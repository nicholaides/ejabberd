#!/usr/bin/env escript
%%! -name addToCluster@<%= @node[:fqdn] %> -setcookie <%= node[:ejabberd_erlang_cookie] %>

main([HostFQDN]) ->
  Node = 'ejabberd@<%= @node[:fqdn] %>',
  Host = list_to_atom(string:concat("ejabberd@",HostFQDN)),
  rpc:call(Node, application, stop,                   [ejabberd]                  ),
  rpc:call(Node, mnesia,      stop,                   []                          ),
  rpc:call(Node, mnesia,      delete_schema,          [[Node]]                    ),
  rpc:call(Node, mnesia,      start,                  []                          ),
  rpc:call(Node, mnesia,      change_config,          [extra_db_nodes, [Host]]    ),

  %% configuration based off of http://www.planeterlang.org/en/planet/article/Ejabberd-Cluster_Database_Configuration
  rpc:call(Node, mnesia,      change_table_copy_type, [schema,              Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [acl,                 Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [bytestream,          Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [caps_features,       Node, ram_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [captcha,             Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [config,              Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [iq_response,         Node, ram_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [irc_custom,          Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [last_activity,       Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [local_config,        Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [mod_register_ip,     Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [motd,                Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [motd_users,          Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [muc_online_room,     Node, ram_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [muc_registered,      Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [muc_room,            Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [offline_msg,         Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [passwd,              Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [privacy,             Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [private_storage,     Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [pubsub_index,        Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [pubsub_item,         Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [pubsub_last_item,    Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [pubsub_node,         Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [pubsub_state,        Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [pubsub_subscription, Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [reg_users_counter,   Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [roster,              Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [roster_version,      Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [route,               Node, ram_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [s2s,                 Node, ram_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [session,             Node, ram_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [session_counter,     Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [temporarily_blocked, Node, disc_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [vcard,               Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      change_table_copy_type, [vcard_search,        Node, disc_only_copies] ),

  %% configuration based off of http://www.planeterlang.org/en/planet/article/Ejabberd-Cluster_Database_Configuration
  rpc:call(Node, mnesia,      add_table_copy, [schema,              Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [acl,                 Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [bytestream,          Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [caps_features,       Node, ram_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [captcha,             Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [config,              Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [iq_response,         Node, ram_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [irc_custom,          Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [last_activity,       Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [local_config,        Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [mod_register_ip,     Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [motd,                Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [motd_users,          Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [muc_online_room,     Node, ram_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [muc_registered,      Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [muc_room,            Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [offline_msg,         Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [passwd,              Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [privacy,             Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [private_storage,     Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [pubsub_index,        Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [pubsub_item,         Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [pubsub_last_item,    Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [pubsub_node,         Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [pubsub_state,        Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [pubsub_subscription, Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [reg_users_counter,   Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [roster,              Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [roster_version,      Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [route,               Node, ram_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [s2s,                 Node, ram_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [session,             Node, ram_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [session_counter,     Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [temporarily_blocked, Node, disc_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [vcard,               Node, disc_only_copies] ),
  rpc:call(Node, mnesia,      add_table_copy, [vcard_search,        Node, disc_only_copies] ),

  rpc:call(Node, mnesia,      info,                   []                          ),
  rpc:call(Node, application, start,                  [ejabberd]                  ).
